#!/bin/bash

# Default message language
lang="en"

# Directories to exclude
declare -a exclude_dirs

# Parse command line arguments
while getopts "m:e:" opt; do
  case ${opt} in
    m) # generate prompt for llm to generate specified language git commit message based on git diff
      lang=$OPTARG
      ;;
    e) # exclude specified directories from git diff
      exclude_dirs+=("$OPTARG")
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
  esac
done

handle_error() {
  local error_message="$1"
  echo "$error_message"
  exit 1
}


copy_to_clipboard() {
  local data=$1
  case "$OSTYPE" in
    "darwin"*) echo "$data" | pbcopy ;;
    "linux-gnu"*) echo "$data" | xclip -selection clipboard ;;
    "cygwin"|"msys"|"win32") echo "$data" | clip ;;
    *) echo "Unknown OS type" ;;
  esac
}

generate_prompt() {
  local git_diff=$1
  local lang=$2
  local git_diff_output=""
  local prompt="""
          Please generate a git commit message with the following requirements:
          
          - Based on the git diff content provided below.
          - Written in $lang.
          - The first line should be a brief summary of the changes, ideally no more than 50 characters long.
          - If the change is complex and requires more context, add a more detailed description after the first line. Leave a blank line after the summary, then write the rest of the message.
          - Write the commit message in the imperative mood, as if giving a command or instruction. For example, use \"Add feature\" instead of \"Added feature\" or \"Adds feature\".
          - If the commit is related to a specific issue or ticket in the project's bug tracker, include a reference to it in the commit message.
          - The commit message should describe what changed and why, without including details about how the changes were implemented.
          - Ensure the description is complete enough to help any reviewer understand the problem and the solution.
          - Avoid abbreviations and use clear and understandable language.
          - Avoid use personal pronouns like I, me, we, us, 我, 我们 etc.
          - The commit message content should not contain any extra text or descriptions before the content.
          
          Git diff:
          $git_diff
          
          Please generate a git commit message based on the diff.
        """
  echo "$prompt"
}

# Generate git diff command
git_diff_cmd="git diff --cached"
if [ ${#exclude_dirs[@]} -ne 0 ]; then
  git_diff_cmd="$git_diff_cmd -- ."
  for dir in "${exclude_dirs[@]}"; do
    git_diff_cmd="$git_diff_cmd ':!$dir'"
  done
fi

git_diff=$(eval $git_diff_cmd) || handle_error "Failed to execute git diff --cached"
case "$lang" in
  "cn") git_diff_output=$(generate_prompt "$git_diff" Chinese) ;;
  "en") git_diff_output=$(generate_prompt "$git_diff" English) ;;
  *) git_diff_output="$git_diff" ;;
esac

copy_to_clipboard "$git_diff_output"